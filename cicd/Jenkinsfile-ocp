pipeline {
    agent any
    environment {
        DB_DATABASE = 'db_blog'
        DB_PASSWORD = '!@bugdeaL3r'
    }
    stages {
        stage('Install Dependencies') {
            agent {
                kubernetes {
                    label 'php-composer-agent'
                    defaultContainer 'php'
                    yaml """
apiVersion: v1
kind: Pod
spec:
  containers:
  - name: php
    image: php:8.0
    command: [ "cat" ]
    tty: true
  - name: composer
    image: composer:2
    command: [ "cat" ]
    tty: true
"""
                }
            }
            steps {
                container('php') {
                    sh 'apt-get update && apt-get install -y unzip git'
                    sh 'docker-php-ext-install pdo pdo_mysql'
                }
                container('composer') {
                    sh 'cp .env.example .env'
                    sh 'composer install'
                    sh 'php artisan config:clear'
                    sh 'php artisan key:gen'
                    sh 'php artisan config:cache'
                }
            }
        }

        stage('Run Tests') {
            steps {
                container('composer') {
                    sh 'php artisan test'
                }
            }
        }

        stage('Deploy to OpenShift') {
            steps {
                echo 'Deploying app on OpenShift...'
                sh 'oc apply -f deployment/' // assuming you have deployment files here
            }
        }
    }
}
